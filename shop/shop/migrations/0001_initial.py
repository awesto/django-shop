# Generated by Django 3.2.10 on 2022-01-03 16:11

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone
import django_fsm
import filer.fields.file
import filer.fields.image
import shop.money.fields
import shop.shopmodels.address
import shop.shopmodels.defaults.commodity
import shop.shopmodels.fields
import shop.shopmodels.inventory


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
        ('filer', '0014_folder_permission_choices'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('post_office', '0011_models_help_text'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BillingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.SmallIntegerField(db_index=True, default=0)),
                ('country', shop.shopmodels.address.CountryField(verbose_name='Country')),
                ('name', models.CharField(max_length=1024)),
                ('address1', models.CharField(max_length=1024)),
                ('address2', models.CharField(blank=True, max_length=1024, null=True)),
                ('zip_code', models.CharField(max_length=12)),
                ('city', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extra', shop.shopmodels.fields.JSONField()),
                ('billing_address', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='shop.billingaddress')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('product_name', models.CharField(max_length=255)),
                ('product_code', models.CharField(max_length=255, unique=True)),
                ('unit_price', shop.money.fields.MoneyField(decimal_places=3)),
                ('order', models.PositiveIntegerField(db_index=True)),
                ('show_breadcrumb', models.BooleanField(default=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField()),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_shop.commodity_set+', to='contenttypes.contenttype')),
                ('sample_image', filer.fields.image.FilerImageField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.FILER_IMAGE_MODEL)),
            ],
            options={
                'ordering': ('order',),
            },
            bases=(shop.shopmodels.defaults.commodity.CommodityMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('recognized', shop.shopmodels.fields.ChoiceEnumField()),
                ('last_access', models.DateTimeField(default=django.utils.timezone.now)),
                ('extra', shop.shopmodels.fields.JSONField(editable=False)),
                ('number', models.PositiveIntegerField(default=None, null=True, unique=True)),
                ('salutation', models.CharField(choices=[('mrs', 'Mrs.'), ('mr', 'Mr.'), ('na', '(n/a)')], max_length=5)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipping_id', models.CharField(blank=True, max_length=255, null=True)),
                ('fulfilled_at', models.DateTimeField(blank=True, null=True)),
                ('shipped_at', models.DateTimeField(blank=True, null=True)),
                ('shipping_method', models.CharField(max_length=50)),
            ],
            options={
                'get_latest_by': 'shipped_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('transition_target', models.CharField(max_length=50)),
                ('notify', shop.shopmodels.fields.ChoiceEnumField()),
                ('mail_template', models.ForeignKey(limit_choices_to=models.Q(('language__isnull', True), ('language', ''), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='post_office.emailtemplate')),
                ('recipient', models.ForeignKey(limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['transition_target', 'recipient_id'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', django_fsm.FSMField(default='new', max_length=50, protected=True)),
                ('currency', models.CharField(editable=False, max_length=7)),
                ('_subtotal', models.DecimalField(decimal_places=2, max_digits=30)),
                ('_total', models.DecimalField(decimal_places=2, max_digits=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extra', shop.shopmodels.fields.JSONField()),
                ('stored_request', shop.shopmodels.fields.JSONField()),
                ('number', models.PositiveIntegerField(default=None, null=True, unique=True)),
                ('shipping_address_text', models.TextField(blank=True, null=True)),
                ('billing_address_text', models.TextField(blank=True, null=True)),
                ('token', models.CharField(editable=False, max_length=40, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.customer')),
            ],
        ),
        migrations.CreateModel(
            name='PolymorphicProductMetaclass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='WorkflowMixinMetaclass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MyProduct',
            fields=[
                ('commodity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.commodity')),
            ],
            options={
                'abstract': False,
            },
            bases=(shop.shopmodels.inventory.AvailableProductMixin, 'shop.commodity'),
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.SmallIntegerField(db_index=True, default=0)),
                ('country', shop.shopmodels.address.CountryField(verbose_name='Country')),
                ('name', models.CharField(max_length=1024)),
                ('address1', models.CharField(max_length=1024)),
                ('address2', models.CharField(blank=True, max_length=1024, null=True)),
                ('zip_code', models.CharField(max_length=12)),
                ('city', models.CharField(max_length=1024)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('product_name', models.CharField(blank=True, help_text='Product name at the moment of purchase.', max_length=255, null=True, unique=True, verbose_name='Product name')),
                ('product_code', models.CharField(blank=True, help_text='Product code at the moment of purchase.', max_length=255, null=True, unique=True, verbose_name='Product code')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_shop.product_set+', to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(max_length=50)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_code', models.CharField(blank=True, max_length=255, null=True)),
                ('_unit_price', models.DecimalField(decimal_places=2, max_digits=30, null=True)),
                ('_line_total', models.DecimalField(decimal_places=2, max_digits=30, null=True)),
                ('extra', shop.shopmodels.fields.JSONField()),
                ('quantity', models.PositiveIntegerField()),
                ('canceled', models.BooleanField(default=False)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', filer.fields.file.FilerFileField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='filer.file')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.notification')),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.delivery')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.orderitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='delivery',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extra', shop.shopmodels.fields.JSONField()),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='customer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shop.customer'),
        ),
        migrations.AddField(
            model_name='cart',
            name='shipping_address',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='shop.shippingaddress'),
        ),
        migrations.AddField(
            model_name='billingaddress',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.customer'),
        ),
        migrations.CreateModel(
            name='MyProductInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earliest', models.DateTimeField(db_index=True, default=datetime.datetime(1, 1, 1, 0, 0, tzinfo=utc))),
                ('latest', models.DateTimeField(db_index=True, default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999, tzinfo=utc))),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_set', to='shop.myproduct')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='delivery',
            unique_together={('shipping_method', 'shipping_id')},
        ),
    ]
